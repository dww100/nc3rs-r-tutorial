{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\nThis is a test\n\n\nTesting 1,2,3", 
            "title": "Home"
        }, 
        {
            "location": "/#welcome-to-mkdocs", 
            "text": "For full documentation visit  mkdocs.org .", 
            "title": "Welcome to MkDocs"
        }, 
        {
            "location": "/#commands", 
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.", 
            "title": "Commands"
        }, 
        {
            "location": "/#project-layout", 
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.", 
            "title": "Project layout"
        }, 
        {
            "location": "/#this-is-a-test", 
            "text": "Testing 1,2,3", 
            "title": "This is a test"
        }, 
        {
            "location": "/intro/", 
            "text": "Introduction\n\n\nFirst things first, open up R studio.\n\n\n\n\nYou should see something like the above; a window with the panes - a \nConsole\n with some introductory text and a blue \n prompt, an empty \nEnviroment\n and a \nFiles\n browser showing the contents of the current directory.\n\n\nLets play with some very basic commands.\nYou need to select the \nConsole\n window and type after the \n prompt (and type \nEnter\n after each one to execute the command).\n\n\nIn the rest of the text we will use the following conventions (which echo what you will see in your \nCommand\n window):\n\n  Commands will be shown with a preceding '\n' as a guide to what you should enter - you must \nnot\n type it in as part of the command.\n\n  The output expected from \nR\n will be preceded by a number in square brackets (for example \n[1]\n)\n\n\nBasic maths\n\n\nR\n can be used as a simple calculator.\nAs in many programming languages, multiply is \n*\n and divide is \n/\n.\n\n\nAddition\n\n\n 1 + 2\n\n\n[1] 3\n\n\nDivision\n\n\n 1 / 2\n\n\n[1] 0.5\n\n\nMultiplication\n\n\n 2 * 2\n\n\n[1] 4\n\n\nKeeping the results of calculations\n\n\nIf this was the only thing \nR\n could do it would be pretty useless.\nIt is very useful to to store the results of a command with a name so we can use it again later.\nIn programming this is called assigning a value in a \nvariable\n.\nIn \nR\n there are two commands to assign a value to a variable - \n-\n and \n=\n.\nTry the following:\n\n\nmy_result \n- 7 + 3\n\n\nNote how there is now no output with square brackets.\nTo see the value in the variable \nx\n use the following command:\n\n\nprint(my_result)\n\n\nYou will also see that \nmy_result\n has been added to the \nValues\n section of the \nEnvironment\n pane (top right) in R Studio.\n\n\nGetting help\n\n\nWe have just used out first \nR\n function - \nprint\n.\nFunctions take input surrounded by brackets.\n\n\nTo get more information on how to use a function you can use \n?\n, for example:\n\n\n?print\n\n\nYou will then see more information in the \nHelp\n tab on the function in the bottom right pane in R Studio.\nThis is a tab in the pane which initially held the \nFiles\n - this can easily be recovered from tab menu there.\n\n\nNext", 
            "title": "Introduction"
        }, 
        {
            "location": "/intro/#introduction", 
            "text": "First things first, open up R studio.   You should see something like the above; a window with the panes - a  Console  with some introductory text and a blue   prompt, an empty  Enviroment  and a  Files  browser showing the contents of the current directory.  Lets play with some very basic commands.\nYou need to select the  Console  window and type after the   prompt (and type  Enter  after each one to execute the command).  In the rest of the text we will use the following conventions (which echo what you will see in your  Command  window):   Commands will be shown with a preceding ' ' as a guide to what you should enter - you must  not  type it in as part of the command.   The output expected from  R  will be preceded by a number in square brackets (for example  [1] )", 
            "title": "Introduction"
        }, 
        {
            "location": "/intro/#basic-maths", 
            "text": "R  can be used as a simple calculator.\nAs in many programming languages, multiply is  *  and divide is  / .", 
            "title": "Basic maths"
        }, 
        {
            "location": "/intro/#addition", 
            "text": "1 + 2  [1] 3", 
            "title": "Addition"
        }, 
        {
            "location": "/intro/#division", 
            "text": "1 / 2  [1] 0.5", 
            "title": "Division"
        }, 
        {
            "location": "/intro/#multiplication", 
            "text": "2 * 2  [1] 4", 
            "title": "Multiplication"
        }, 
        {
            "location": "/intro/#keeping-the-results-of-calculations", 
            "text": "If this was the only thing  R  could do it would be pretty useless.\nIt is very useful to to store the results of a command with a name so we can use it again later.\nIn programming this is called assigning a value in a  variable .\nIn  R  there are two commands to assign a value to a variable -  -  and  = .\nTry the following:  my_result  - 7 + 3  Note how there is now no output with square brackets.\nTo see the value in the variable  x  use the following command:  print(my_result)  You will also see that  my_result  has been added to the  Values  section of the  Environment  pane (top right) in R Studio.", 
            "title": "Keeping the results of calculations"
        }, 
        {
            "location": "/intro/#getting-help", 
            "text": "We have just used out first  R  function -  print .\nFunctions take input surrounded by brackets.  To get more information on how to use a function you can use  ? , for example:  ?print  You will then see more information in the  Help  tab on the function in the bottom right pane in R Studio.\nThis is a tab in the pane which initially held the  Files  - this can easily be recovered from tab menu there.  Next", 
            "title": "Getting help"
        }
    ]
}